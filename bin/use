#!/usr/bin/python
 
# A silly bit of fiddling with the idea of having a universal "open" button for the command line.
# Would probably be much better off as a BASH script someday...

import sys,re,subprocess
 
if len(sys.argv) == 1:
    print "Must provide a file path."
    exit(1);
 
filePath = sys.argv[1]
fileParts = re.split('\.',filePath)
extension = fileParts[len(fileParts)-1]
 
command=''
 
lowerExtension = extension.lower()
 
if lowerExtension in ['ods','odt','xlt','fods','xls','xlsx']:
    command = 'oocalc "{0}"'
elif lowerExtension in ['odt','ott','doc','docx','dot','rft']:
    command = 'oowriter "{0}"'
elif lowerExtension in ['py','php','pl','c','cpp','xml']:
    command = 'geany "{0}"'
elif lowerExtension in ['pcap']:
    command = '/usr/sbin/wireshark "{0}"'
elif lowerExtension in ['txt','conf','cnf','crt','pem','key']:
    command = 'pluma "{0}"'
elif lowerExtension in ['rar','gz','tar','bzip2','bz2','7z']:
    command = 'engrampa "{0}"'
elif lowerExtension in ['avi','mp4','mkv','wmv']:
    command = 'totem "{0}"'
    command = 'vlc "{0}"'
elif lowerExtension in ['mp3','wav']:
    # Giving music its own extension for a super-lazy toggle between players.
    command = 'totem "{0}"'
elif lowerExtension in ['png','gif','jpg','jpeg','tif']:
    command = 'eom "{0}"'
elif lowerExtension in ['log']:
    command = 'tail -f "{0}"'
elif lowerExtension in ['pdf','cbr','cbz']:
    command = 'atril "{0}"'
 
if len(command) > 0:
    try:
        exit(subprocess.call(command.format(filePath),shell=True))
    except KeyboardInterrupt:
        print "Ctrl-C'd"
        pass
else:
    print 'Unknown extension : {0}'.format(lowerExtension)
    exit(2)

