
# An example of how authentication can be made to go off of two sources (in this case with two different LDAP domains)

# Define authentication providers
<AuthnProviderAlias ldap openldap>
    # OpenLDAP domain

    # Credentials
    AuthLDAPBindDN 'proxy-account-dn'
    AuthLDAPBindPassword [[redacted]]
 
    AuthLDAPURL ldap://10.11.12.13/dc=localdomain?uid
    AuthLDAPGroupAttribute memberUid
    AuthLDAPGroupAttributeIsDN off 

    # Server-specific authentication options.
    # Reminder: The group name must be a DN.
    Require ldap-group cn=access-group,ou=groups,dc=localdomain
 
    # Important, otherwise "(9)Bad file descriptor: Could not open password file: (null)"
    AuthUserFile /dev/null
</AuthnProviderAlias>
 
<AuthnProviderAlias ldap active-directory>
    # Active Directory domain (through unencrypted Global Catalog)

    # Credentials
    AuthLDAPBindDN "CN=LDAPAuth,OU=Service Accounts,DC=domain-beta,DC=local"
    AuthLDAPBindPassword [[REDACTED]]

    # Using a nested member-of search to filter through authorized users.
    AuthLDAPURL "ldap://ldap.beta:3268/?sAMAccountName?sub?(memberOf%3A1.2.840.113556.1.4.1941%3A=CN=svn-access,OU=Groups,OU=Lantzville,OU=domain-beta,DC=local)"
    # Important, otherwise "(9)Bad file descriptor: Could not open password file: (null)"
    AuthUserFile /dev/null
</AuthnProviderAlias>
 

<VirtualHost *:80>

    ServerName svn-site.localdomain
 
    DAV svn
    SVNPath /path/to/repo
    #AuthzSVNAccessFile /srv/svn/access/svn.conf
 
    AuthName "Repository File"
    AuthType Basic
    AuthBasicProvider openldap active-directory
 
    Require valid-user
</VirtualHost>
