
# Force an HTTP connection to be use HTTPS instead.
<Macro force-ssl>

  RewriteEngine On
 
  RewriteCond %{HTTPS} !=on
  # This checks to make sure the connection is not already HTTPS 
  RewriteRule ^/?(.*) https://%{SERVER_NAME}/$1 [R,L]

</Macro>

# Common SSL directives to make VirtualHost definitions less crowded.
<Macro common-ssl>

  SSLEngine on

  SSLProtocol all -SSLv2
  # Original CentOS 7:
  # SSLCipherSuite HIGH:MEDIUM:!aNULL:!MD5:!SEED:!IDEA

  # Speed-optimized SSL Cipher configuration:
  #   If speed is your main concern (on busy HTTPS servers e.g.),
  #   you might want to force clients to specific, performance
  #   optimized ciphers. In this case, prepend those ciphers
  #   to the SSLCipherSuite list, and enable SSLHonorCipherOrder.
  #   Caveat: by giving precedence to RC4-SHA and AES128-SHA
  #   (as in the example below), most connections will no longer
  #   have perfect forward secrecy - if the server's key is
  #   compromised, captures of past or future traffic must be
  #   considered compromised, too.
  #SSLCipherSuite RC4-SHA:AES128-SHA:HIGH:MEDIUM:!aNULL:!MD5
  #SSLHonorCipherOrder on
  # Import:
  SSLCipherSuite ALL:!ADH:!EXPORT:!SSLv2:RC4+RSA:+HIGH:+MEDIUM:+LOW

  SSLCertificateFile /etc/httpd/ssl/test.lan.crt
  SSLCertificateKeyFile /etc/httpd/ssl/test.lan.key

  BrowserMatch "MSIE [2-5]" \
    nokeepalive ssl-unclean-shutdown \
    downgrade-1.0 force-response-1.0

  <Files ~ "\.(cgi|shtml|phtml|php3?)$">
    SSLOptions +StdEnvVars
  </Files>
  <Directory "/var/www/cgi-bin">
    SSLOptions +StdEnvVars
  </Directory>

</Macro>
